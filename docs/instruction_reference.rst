Instruction reference
=====================

----------
Main terms
----------

* r8 - 8 bit register
* r16 - 16 bit register
* r32 - 32 bit register
* r64 - 64 bit register
* rm - interpret register value as address
* m - immediate memory address
* m8 - 8 bits from immediate memory address
* m16 - 16 bits from immediate memory address
* m32 - 32 bits from immediate memory address
* m64 - 64 bits from immediate memory address
* imm8 - immediate 8 bit value
* imm16 - immediate 16 bit value
* imm32 - immediate 32 bit value
* imm64 - immediate 64 bit value

========================
MOV - Move
========================

+-----------------+---------------------+---------------+-----------------------------------------+
|     Opcode      |     Instruction     | Operands type |               Description               |
+=================+=====================+===============+=========================================+
|  010000<r><r>   |   mov <r8>, <r8>    |      R_R      |  Moves data from second r8 to first r8  |
+-----------------+---------------------+---------------+-----------------------------------------+
|  010040<r><r>   |  mov <r16>, <r16>   |      R_R      | Moves data from second r16 to first r16 |
+-----------------+---------------------+---------------+-----------------------------------------+
|  010080<r><r>   |  mov <r32>, <r32>   |      R_R      | Moves data from second r32 to first r32 |
+-----------------+---------------------+---------------+-----------------------------------------+
|  0100C0<r><r>   |  mov <r64>, <r64>   |      R_R      | Moves data from second r64 to first r64 |
+-----------------+---------------------+---------------+-----------------------------------------+
|  010001<r><r>   |   mov <r8>, <rm>    |     R_RM      |        Moves data to r8 from rm         |
+-----------------+---------------------+---------------+-----------------------------------------+
|  010041<r><r>   |  mov <r16>, <rm>    |     R_RM      |        Moves data to r16 from rm        |
+-----------------+---------------------+---------------+-----------------------------------------+
|  010081<r><r>   |  mov <r32>, <rm>    |     R_RM      |        Moves data to r32 from rm        |
+-----------------+---------------------+---------------+-----------------------------------------+
|  0100C1<r><r>   |  mov <r64>, <rm>    |     R_RM      |        Moves data to r64 from rm        |
+-----------------+---------------------+---------------+-----------------------------------------+
|  010002<r><m>   |   mov <r8>, <m>     |      R_M      |         Moves data from m to r8         |
+-----------------+---------------------+---------------+-----------------------------------------+
|  010042<r><m>   |   mov <r16>, <m>    |      R_M      |        Moves data from m to r16         |
+-----------------+---------------------+---------------+-----------------------------------------+
|  010082<r><m>   |   mov <r32>, <m>    |      R_M      |        Moves data from m to r32         |
+-----------------+---------------------+---------------+-----------------------------------------+
|  0100C2<r><m>   |   mov <r64>, <m>    |      R_M      |        Moves data from m to r64         |
+-----------------+---------------------+---------------+-----------------------------------------+
| 010003<r><imm>  |  mov <r8>, <imm8>   |     R_IMM     |            Moves imm8 to r8             |
+-----------------+---------------------+---------------+-----------------------------------------+
| 010043<r><imm>  |  mov <r16>, <imm16> |     R_IMM     |           Moves imm16 to r16            |
+-----------------+---------------------+---------------+-----------------------------------------+
| 010083<r><imm>  |  mov <r32>, <imm32> |     R_IMM     |           Moves imm32 to r32            |
+-----------------+---------------------+---------------+-----------------------------------------+
| 0100C3<r><imm>  |  mov <r64>, <imm64> |     R_IMM     |           Moves imm64 to r64            |
+-----------------+---------------------+---------------+-----------------------------------------+
| 010004<rm><r8>  |   mov <rm>, <r8>    |     RM_R      |        Moves data to rm from r8         |
+-----------------+---------------------+---------------+-----------------------------------------+
| 010044<rm><r16> |  mov <rm>, <r16>    |     RM_R      |        Moves data to rm from r16        |
+-----------------+---------------------+---------------+-----------------------------------------+
| 010084<rm><r32> |  mov <rm>, <r32>    |     RM_R      |        Moves data to rm from r32        |
+-----------------+---------------------+---------------+-----------------------------------------+
| 0100C4<rm><r64> |  mov <rm>, <r64>    |     RM_R      |        Moves data to rm from r64        |
+-----------------+---------------------+---------------+-----------------------------------------+
| 010005<rm><m8>  |   mov <rm>, <m8>    |     RM_M      |        Moves data from m8 to rm         |
+-----------------+---------------------+---------------+-----------------------------------------+
| 010045<rm><m16> |   mov <rm>, <m16>   |     RM_M      |        Moves data from m16 to rm        |
+-----------------+---------------------+---------------+-----------------------------------------+
| 010085<rm><m32> |   mov <rm>, <m32>   |     RM_M      |        Moves data from m32 to rm        |
+-----------------+---------------------+---------------+-----------------------------------------+
| 0100C5<rm><m64> |   mov <rm>, <m64>   |     RM_M      |        Moves data from m64 to rm        |
+-----------------+---------------------+---------------+-----------------------------------------+
|010006<rm><imm8> |  mov <rm>, <imm8>   |     RM_IMM    |            Moves imm8 to rm             |
+-----------------+---------------------+---------------+-----------------------------------------+
|010046<rm><imm16>|  mov <rm>, <imm16>  |     RM_IMM    |           Moves imm16 to rm             |
+-----------------+---------------------+---------------+-----------------------------------------+
|010086<rm><imm32>|  mov <rm>, <imm32>  |     RM_IMM    |           Moves imm32 to rm             |
+-----------------+---------------------+---------------+-----------------------------------------+
|0100C6<rm><imm64>|  mov <rm>, <imm64>  |     RM_IMM    |           Moves imm64 to rm             |
+-----------------+---------------------+---------------+-----------------------------------------+
|  010006<m><r8>  |   mov <m>, <r8>     |      M_R      |            Moves r8 to m                |
+-----------------+---------------------+---------------+-----------------------------------------+
|  010046<m><r16> |   mov <m>, <r16>    |      M_R      |            Moves r16 to m               |
+-----------------+---------------------+---------------+-----------------------------------------+
|  010086<m><r32> |   mov <m>, <r32>    |      M_R      |            Moves r32 to m               |
+-----------------+---------------------+---------------+-----------------------------------------+
|  0100C6<m><r64> |   mov <m>, <r64>    |      M_R      |            Moves r64 to m               |
+-----------------+---------------------+---------------+-----------------------------------------+

**Description**
Copies the value of the second operand to the first operand.
The source can be either a register, a memory location, or an immediate value.
The destination can be either a register or a memory location.

**Exceptions**
IA - access to invalid memory area.

**Flags affected**
None.