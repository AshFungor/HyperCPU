name: HyperCPU CI/CD Pipeline

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  testing:
    runs-on: self-hosted
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'ci force push')"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Pull submodules
        run: |
          git submodule update --init --remote --recursive
      
      - name: Install all tools
        uses: aminya/setup-cpp@v1
        with:
          cmake: true
          cppcheck: true
        
      - name: Install GTest Parallelizer
        run: |
          git -C "../gtest-parallel" pull || git clone https://github.com/google/gtest-parallel.git "../gtest-parallel"
      
      - name: Build and test with GCC on Debug profile
        run: |
          cmake -S. -Bbuild -DHCPU_COMPILER=gcc -DCMAKE_BUILD_TYPE=Debug
          cmake --build build --target build-all-tests-github -j4
          ../gtest-parallel/gtest-parallel build/modular_testing --workers=4
          ../gtest-parallel/gtest-parallel build/integration_testing --workers=4
          rm -rf build

      - name: Build and test with GCC on Release profile
        run: |
          cmake -S. -Bbuild -DHCPU_COMPILER=gcc -DCMAKE_BUILD_TYPE=Release
          cmake --build build --target build-all-tests-github -j4
          ../gtest-parallel/gtest-parallel build/modular_testing --workers=4
          ../gtest-parallel/gtest-parallel build/integration_testing --workers=4
          rm -rf build

      - name: Build and test with LLVM on Debug profile
        run: |
          cmake -S. -Bbuild -DHCPU_COMPILER=clang -DCMAKE_C_COMPILER=clang-19 -DCMAKE_CXX_COMPILER=clang++-19 -DCMAKE_BUILD_TYPE=Release
          cmake --build build --target build-all-tests-github -j4
          ../gtest-parallel/gtest-parallel build/modular_testing --workers=4
          ../gtest-parallel/gtest-parallel build/integration_testing --workers=4
          rm -rf build

      - name: Build and test with LLVM on Release profile
        run: |
          cmake -S. -Bbuild -DHCPU_COMPILER=clang -DCMAKE_C_COMPILER=clang-19 -DCMAKE_CXX_COMPILER=clang++-19 -DCMAKE_BUILD_TYPE=Release
          cmake --build build --target build-all-tests-github -j4
          ../gtest-parallel/gtest-parallel build/modular_testing --workers=4
          ../gtest-parallel/gtest-parallel build/integration_testing --workers=4
          rm -rf build

  versioning-patch-increment:
    runs-on: self-hosted
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'ci force push') && !contains(github.event.head_commit.message, 'minor')"
    needs: [testing]
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      
      - name: Setup git user
        uses: fregante/setup-git-user@v1

      - name: Increment version
        run: |
          scripts/increment_patch.sh
        
      - name: Push changes to master branch
        run: |
          git checkout dev
          git switch dev
          MSG=$(git log -1 --pretty=%B | more)
          git reset --soft HEAD~1
          git add .
          git commit -m "$MSG"
          git push origin dev -f
          git merge -s ours origin/master
          git checkout master
          git reset --hard dev
          git push origin master -f

  versioning-minor-increment:
    runs-on: self-hosted
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'ci force push') && contains(github.event.head_commit.message, 'minor')"
    needs: [testing]
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      
      - name: Setup git user
        uses: fregante/setup-git-user@v1

      - name: Increment version
        run: |
          scripts/increment_minor.sh
        
      - name: Push changes to master branch
        run: |
          git checkout dev
          git switch dev
          MSG=$(git log -1 --pretty=%B | more)
          git reset --soft HEAD~1
          git add .
          git commit -m "$MSG"
          git push origin dev -f
          git merge -s ours origin/master
          git checkout master
          git reset --hard dev
          git push origin master -f
  
  sync-no-update:
    runs-on: self-hosted
    if: "contains(github.event.head_commit.message, 'ci force push')"
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      
      - name: Setup git user
        uses: fregante/setup-git-user@v1

      - name: Push changes to master branch
        run: |
          git checkout master
          git reset --hard dev
          git push origin master -f
